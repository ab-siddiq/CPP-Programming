input -> a weighted graph and a source
output -> distance of all nodes from the source
//relaxing formula
/*
    u -> v
     if d[u] + c(u,v) < d[v]:
        d[v] = d[u] + c(u,v) < d[v]
*/
- create a distance array "d"
- initialiaze all values of "d" to infinity
- d[src] = 0
- create a visited array and mark all nodes as unvisited

- for i = 0 to n-1
    - loop over the nodes and pick the "unvisited" node with lowest node d[node]
    - visited[node] =1;
    - for all adj_node of node:
        - if all adj_node[node] + c(node, adj_node) < d[adj_node]:
            d[adj_node] = adj_node[node] + c(node, adj_node)

- output array "d"